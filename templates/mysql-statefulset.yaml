{{- if .Values.mysql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mvn-stack.mysqlFullname" . }}
  labels:
    {{- include "mvn-stack.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "mvn-stack.mysqlFullname" . }}
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mvn-stack.name" . }}
      app.kubernetes.io/component: mysql
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mvn-stack.name" . }}
        app.kubernetes.io/component: mysql
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: mysql
          image: "{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}"
          imagePullPolicy: {{ .Values.mysql.image.pullPolicy | default .Values.global.imagePullPolicy }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "{{ .Values.mysql.rootPassword }}"
            - name: MYSQL_DATABASE
              value: "{{ .Values.mysql.database }}"
            - name: MYSQL_USER
              value: "{{ .Values.mysql.user }}"
            - name: MYSQL_PASSWORD
              value: "{{ .Values.mysql.password }}"
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
          resources:
            {{- toYaml .Values.mysql.resources | nindent 12 }}
          livenessProbe:
            exec:
              command: ["mysqladmin", "ping", "-h", "localhost", "-uroot", "-p{{ .Values.mysql.rootPassword }}"]
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ["mysqladmin", "ping", "-h", "localhost", "-uroot", "-p{{ .Values.mysql.rootPassword }}"]
            initialDelaySeconds: 10
            periodSeconds: 5
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "mvn-stack.labels" . | nindent 10 }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.mysql.persistence.storageClass }}
        storageClassName: "{{ .Values.mysql.persistence.storageClass }}"
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.mysql.persistence.size }}
{{- end }}
